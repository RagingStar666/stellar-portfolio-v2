---
import PageLayout from "@layouts/PageLayout.astro"
import { EDUCATION } from "@consts"
import { certsData } from "@data/certsData"
import Breadcrumbs from "@components/Breadcrumbs.astro"

// Fetch university data
const universityData = {
  name: "University of Calcutta",
  degree: "B.A. LL.B. (Hons.)",
  years: "2024-2029 (Expected)",
  description: "Currently a first-year student at the Department of Law, focusing on intellectual property rights, alternative dispute resolution, and business law.",
  image: "/placeholder-image.svg",
  link: "#",
  dateStart: "Jun 2024"
}

// Extract institution from description for certification entries
function extractInstitution(description: string): string {
  return description.split(',')[0].trim();
}

// Format education entries
const educationEntries = [
  {
    type: "education" as const,
    name: universityData.name,
    degree: universityData.degree,
    years: universityData.years,
    description: universityData.description,
    image: universityData.image,
    link: universityData.link,
    dateStart: universityData.dateStart,
    slug: "university-of-calcutta"
  }
].sort((a, b) => {
  // Sort by date (newest first)
  const getDate = (entry: {dateStart: string}): number => {
    const dateStart = entry.dateStart;
    const months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
    const monthIndex = months.indexOf(dateStart);
    return monthIndex !== -1 ? new Date(2024, monthIndex).getTime() : 0;
  };
  
  return getDate(b) - getDate(a); // Descending order
});

// Format certification entries
const certificationEntries = certsData.map(cert => ({
  type: "certification" as const,
  name: cert.title,
  institution: extractInstitution(cert.description),
  description: cert.description,
  image: cert.image,
  link: cert.link,
  dateStart: cert.date.split(" ")[0],
  date: cert.date,
  slug: cert.title.toLowerCase().replace(/\s+/g, '-')
})).sort((a, b) => {
  // Sort by date (newest first)
  const getDate = (entry: {dateStart: string}): number => {
    const dateStart = entry.dateStart;
    const months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
    const monthIndex = months.indexOf(dateStart);
    return monthIndex !== -1 ? new Date(2024, monthIndex).getTime() : 0;
  };
  
  return getDate(b) - getDate(a); // Descending order
});

// Skills data restructured to focus on tools
const skillsData = [
  {
    category: "Legal & Research Tools",
    description: "Strong grasp of doctrinal and interdisciplinary research; fluent in case analysis and statutory interpretation.",
    tools: [
      { name: "Zotero", link: "https://www.zotero.org/" },
      { name: "Google Scholar", link: "https://scholar.google.com/" },
      { name: "JSTOR", link: "https://www.jstor.org/" },
      { name: "HeinOnline", link: "https://home.heinonline.org/" },
      { name: "SSRN", link: "https://www.ssrn.com/" },
      { name: "Statista", link: "https://www.statista.com/" }
    ]
  },
  {
    category: "Productivity & Collaboration",
    description: "Skilled in aligning team functions with strategic objectives, managing personnel, and resolving internal workflow issues.",
    tools: [
      { name: "Microsoft Office", link: "https://www.microsoft.com/microsoft-365" },
      { name: "Google Workspace", link: "https://workspace.google.com/" },
      { name: "Notion", link: "https://www.notion.so/" },
      { name: "Trello", link: "https://trello.com/" },
      { name: "Slack", link: "https://slack.com/" },
      { name: "ClickUp", link: "https://clickup.com/" }
    ]
  },
  {
    category: "Design & Multimedia",
    description: "Experience with creative and visual tools for presentation and content creation.",
    tools: [
      { name: "Adobe Photoshop", link: "https://www.adobe.com/products/photoshop.html" },
      { name: "Adobe Illustrator", link: "https://www.adobe.com/products/illustrator.html" },
      { name: "Canva", link: "https://www.canva.com/" },
      { name: "Figma", link: "https://www.figma.com/" },
      { name: "Balsamiq", link: "https://balsamiq.com/" },
      { name: "Inkscape", link: "https://inkscape.org/" }
    ]
  },
  {
    category: "Programming & Technical",
    description: "Basic to intermediate knowledge of programming languages and technical tools.",
    tools: [
      { name: "Python", link: "https://www.python.org/" },
      { name: "HTML/CSS", link: "https://developer.mozilla.org/en-US/docs/Web/HTML" },
      { name: "JavaScript", link: "https://developer.mozilla.org/en-US/docs/Web/JavaScript" },
      { name: "TypeScript", link: "https://www.typescriptlang.org/" },
      { name: "React", link: "https://reactjs.org/" },
      { name: "Astro", link: "https://astro.build/" }
    ]
  }
]

const links = [
  { name: "Home", url: "/" },
  { name: "Education", url: "/education" }
];
---

<PageLayout title={EDUCATION.TITLE} description={EDUCATION.DESCRIPTION}>
  <div class="container mx-auto px-4 sm:px-6 py-12">
    <div class="max-w-5xl mx-auto">
      <Breadcrumbs links={links} />
      
      <!-- Section Heading -->
      <div class="glass-effect rounded-lg p-6 md:p-8 mb-8">
        <h1 class="text-2xl md:text-3xl font-bold text-white mb-2 md:mb-4">Education & Skills</h1>
        <p class="text-white/80 text-sm md:text-base">
          An overview of my academic qualifications, professional certifications, and specialized skills
          that I've developed throughout my educational and professional journey.
        </p>
      </div>
      
      <!-- Floating Navigation for Mobile -->
      <div class="floating-nav">
        <div class="floating-nav-content">
          <a href="#education" class="floating-nav-item">Education</a>
          <a href="#certifications" class="floating-nav-item">Certifications</a>
          <a href="#skills" class="floating-nav-item">Skills</a>
        </div>
      </div>

      <!-- Academic Education Section -->
      <div id="education" class="mb-12 md:mb-16 scroll-mt-24">
        <h2 class="text-xl md:text-2xl font-bold text-white mb-6 flex items-center">
          <span class="w-8 h-8 rounded-full bg-[#3be9d1]/20 flex items-center justify-center text-[#3be9d1] mr-3 text-xs">E</span>
          Academic Education
        </h2>
        
        <!-- LinkedIn-style Timeline -->
        <div class="timeline-container">
          <div class="timeline-line"></div>
          
          {educationEntries.map((entry) => (
            <div class="timeline-item">
              <div class="timeline-node"></div>
              <a href={`/education/${entry.slug}`} class="timeline-content glass-effect rounded-lg p-5 block">
                <div class="text-[#3be9d1] text-sm font-medium uppercase tracking-wider mb-2">
                  {entry.dateStart} - Present
                </div>
                
                <h3 class="text-lg font-semibold text-white">{entry.degree}</h3>
                <p class="text-white/80 mb-4">{entry.name}</p>
                
                <p class="text-white/70 text-sm mb-4">{entry.description}</p>
                
                <div class="flex items-center text-sm">
                  <span class="text-[#3be9d1] hover:underline">View details →</span>
                </div>
              </a>
            </div>
          ))}
        </div>
      </div>
      
      <!-- Certifications Section -->
      <div id="certifications" class="mb-12 md:mb-16 scroll-mt-24">
        <h2 class="text-xl md:text-2xl font-bold text-white mb-6 flex items-center">
          <span class="w-8 h-8 rounded-full bg-[#3be9d1]/20 flex items-center justify-center text-[#3be9d1] mr-3 text-xs">C</span>
          Certifications
        </h2>
        
        <!-- LinkedIn-style Timeline -->
        <div class="timeline-container">
          <div class="timeline-line"></div>
          
          {certificationEntries.map((entry) => (
            <div class="timeline-item">
              <div class="timeline-node"></div>
              <a href={`/education/certifications/${entry.slug}`} class="timeline-content glass-effect rounded-lg p-5 block">
                <div class="text-[#3be9d1] text-sm font-medium uppercase tracking-wider mb-2">
                  {entry.date}
                </div>
                
                <h3 class="text-lg font-semibold text-white">{entry.name}</h3>
                <p class="text-white/80 mb-4">{entry.institution}</p>
                
                <p class="text-white/70 text-sm mb-4">{entry.description}</p>
                
                <div class="flex items-center text-sm">
                  <span class="text-[#3be9d1] hover:underline">View certificate →</span>
                </div>
              </a>
            </div>
          ))}
        </div>
      </div>
      
      <!-- Skills Section -->
      <div id="skills" class="mb-12 md:mb-16 scroll-mt-24">
        <h2 class="text-xl md:text-2xl font-bold text-white mb-6 flex items-center">
          <span class="w-8 h-8 rounded-full bg-[#3be9d1]/20 flex items-center justify-center text-[#3be9d1] mr-3 text-xs">S</span>
          Skills & Tools
        </h2>
        
        <div class="grid grid-cols-1 sm:grid-cols-2 gap-6">
          {skillsData.map((skillCategory) => (
            <div class="glass-effect rounded-lg p-5 transition-all duration-300 hover:translate-y-[-5px]">
              <h3 class="text-lg font-semibold text-white mb-3">{skillCategory.category}</h3>
              <p class="text-white/70 text-sm mb-4">{skillCategory.description}</p>
              
              <div class="flex flex-wrap gap-2">
                {skillCategory.tools.map((tool) => (
                  <a 
                    href={tool.link} 
                    target="_blank" 
                    rel="noopener noreferrer"
                    class="inline-flex items-center px-3 py-1 bg-[#3be9d1]/10 hover:bg-[#3be9d1]/20 
                          rounded-full text-sm text-[#3be9d1] transition-colors"
                  >
                    {tool.name}
                  </a>
                ))}
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  </div>
</PageLayout>

<script>
// Script to update active state on floating nav based on scroll position
document.addEventListener('DOMContentLoaded', () => {
  const sections = document.querySelectorAll('[id]');
  const navItems = document.querySelectorAll('.floating-nav-item');
  
  function updateActiveNavItem() {
    let currentSection = '';
    
    sections.forEach((section) => {
      const sectionElement = section as HTMLElement;
      const sectionTop = sectionElement.offsetTop;
      const sectionHeight = sectionElement.offsetHeight;
      if (window.scrollY >= sectionTop - 100 && window.scrollY < sectionTop + sectionHeight - 100) {
        const id = section.getAttribute('id');
        if (id) {
          currentSection = id;
        }
      }
    });
    
    navItems.forEach(item => {
      item.classList.remove('active');
      const href = item.getAttribute('href');
      if (href === `#${currentSection}`) {
        item.classList.add('active');
      }
    });
  }
  
  window.addEventListener('scroll', updateActiveNavItem);
  updateActiveNavItem();
});
</script> 