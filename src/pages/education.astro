---
import PageLayout from "@layouts/PageLayout.astro"
import { EDUCATION } from "@consts"
import { certsData } from "@data/certsData"
import Breadcrumbs from "@components/Breadcrumbs.astro"

// Fetch university data
const universityData = {
  name: "University of Calcutta",
  degree: "B.A. LL.B. (Hons.)",
  years: "2024-2029 (Expected)",
  description: "Currently a first-year student at the Department of Law, focusing on intellectual property rights, alternative dispute resolution, and business law.",
  image: "/placeholder-image.svg",
  link: "#",
  dateStart: "Jun 2024"
}

// Extract institution from description for certification entries
function extractInstitution(description: string): string {
  return description.split(',')[0].trim();
}

// Format education entries
const educationEntries = [
  {
    type: "education" as const,
    name: universityData.name,
    degree: universityData.degree,
    years: universityData.years,
    description: universityData.description,
    image: universityData.image,
    link: universityData.link,
    dateStart: universityData.dateStart,
    slug: "university-of-calcutta"
  }
].sort((a, b) => {
  // Sort by date (newest first)
  const getDate = (entry: {dateStart: string}): number => {
    const dateStart = entry.dateStart;
    const months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
    const monthIndex = months.indexOf(dateStart);
    return monthIndex !== -1 ? new Date(2024, monthIndex).getTime() : 0;
  };
  
  return getDate(b) - getDate(a); // Descending order
});

// Format certification entries
const certificationEntries = certsData.map(cert => ({
  type: "certification" as const,
  name: cert.title,
  institution: extractInstitution(cert.description),
  description: cert.description,
  image: cert.image,
  link: cert.link,
  dateStart: cert.date.split(" ")[0],
  date: cert.date,
  slug: cert.title.toLowerCase().replace(/\s+/g, '-')
})).sort((a, b) => {
  // Sort by date (newest first)
  const getDate = (entry: {dateStart: string}): number => {
    const dateStart = entry.dateStart;
    const months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
    const monthIndex = months.indexOf(dateStart);
    return monthIndex !== -1 ? new Date(2024, monthIndex).getTime() : 0;
  };
  
  return getDate(b) - getDate(a); // Descending order
});

// Skills data restructured to focus on tools
const skillsData = [
  {
    category: "Legal & Research Tools",
    description: "Strong grasp of doctrinal and interdisciplinary research; fluent in case analysis and statutory interpretation.",
    tools: [
      { name: "Zotero", link: "https://www.zotero.org/" },
      { name: "Google Scholar", link: "https://scholar.google.com/" },
      { name: "JSTOR", link: "https://www.jstor.org/" },
      { name: "HeinOnline", link: "https://home.heinonline.org/" },
      { name: "SSRN", link: "https://www.ssrn.com/" },
      { name: "Statista", link: "https://www.statista.com/" }
    ]
  },
  {
    category: "Productivity & Collaboration",
    description: "Skilled in aligning team functions with strategic objectives, managing personnel, and resolving internal workflow issues.",
    tools: [
      { name: "Microsoft Office", link: "https://www.microsoft.com/microsoft-365" },
      { name: "Google Workspace", link: "https://workspace.google.com/" },
      { name: "Notion", link: "https://www.notion.so/" },
      { name: "Trello", link: "https://trello.com/" },
      { name: "Slack", link: "https://slack.com/" },
      { name: "ClickUp", link: "https://clickup.com/" }
    ]
  },
  {
    category: "Design & Multimedia",
    description: "Experience with creative and visual tools for presentation and content creation.",
    tools: [
      { name: "Adobe Photoshop", link: "https://www.adobe.com/products/photoshop.html" },
      { name: "Adobe Illustrator", link: "https://www.adobe.com/products/illustrator.html" },
      { name: "Canva", link: "https://www.canva.com/" },
      { name: "Figma", link: "https://www.figma.com/" },
      { name: "Balsamiq", link: "https://balsamiq.com/" },
      { name: "Inkscape", link: "https://inkscape.org/" }
    ]
  },
  {
    category: "Programming & Technical",
    description: "Basic to intermediate knowledge of programming languages and technical tools.",
    tools: [
      { name: "Python", link: "https://www.python.org/" },
      { name: "HTML/CSS", link: "https://developer.mozilla.org/en-US/docs/Web/HTML" },
      { name: "JavaScript", link: "https://developer.mozilla.org/en-US/docs/Web/JavaScript" },
      { name: "TypeScript", link: "https://www.typescriptlang.org/" },
      { name: "React", link: "https://reactjs.org/" },
      { name: "Astro", link: "https://astro.build/" }
    ]
  }
]

const links = [
  { name: "Home", url: "/" },
  { name: "Education", url: "/education" }
];
---

<PageLayout title={EDUCATION.TITLE} description={EDUCATION.DESCRIPTION}>
  <div class="container mx-auto px-6 py-12">
    <div class="max-w-6xl mx-auto">
      <Breadcrumbs links={links} />
      
      <!-- Mobile Sidebar Toggle -->
      <button id="toggle-sidebar" class="md:hidden mb-4 px-4 py-2 bg-[#3be9d1]/10 text-[#3be9d1] rounded-md flex items-center justify-center">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
        </svg>
        Toggle Navigation
      </button>
      
      <div class="flex flex-col md:flex-row">
        <!-- Sidebar Navigation -->
        <div id="sidebar" class="hidden md:block md:w-64 md:mr-8 flex-shrink-0 mb-8 md:mb-0 transition-all duration-300">
          <div class="glass-effect rounded-lg p-6 sticky top-24">
            <h3 class="text-lg font-semibold text-white mb-4 border-b border-white/10 pb-2">
              Education
            </h3>
            <nav class="space-y-4">
              <a href="#education" class="block text-white hover:text-[#3be9d1] transition-colors py-1">
                Academic Education
              </a>
              <a href="#certifications" class="block text-white hover:text-[#3be9d1] transition-colors py-1">
                Certifications
              </a>
              <a href="#skills" class="block text-white hover:text-[#3be9d1] transition-colors py-1">
                Skills & Tools
              </a>
            </nav>
          </div>
        </div>
        
        <!-- Main Content -->
        <div class="flex-1">
          <div class="glass-effect rounded-lg p-8 mb-8">
            <h1 class="text-3xl font-bold text-white mb-4">Education & Skills</h1>
            <p class="text-white/80">
              An overview of my academic qualifications, professional certifications, and specialized skills
              that I've developed throughout my educational and professional journey.
            </p>
          </div>
          
          <!-- Academic Education Section -->
          <section id="education" class="mb-12">
            <h2 class="text-2xl font-bold text-white mb-6 flex items-center">
              <span class="w-8 h-8 rounded-full bg-[#3be9d1]/20 flex items-center justify-center text-[#3be9d1] mr-3 text-xs">E</span>
              Academic Education
            </h2>
            
            <!-- Timeline -->
            <div class="relative ml-4 pl-8 border-l-2 border-[#3be9d1]/30">
              {educationEntries.map((entry, index) => (
                <div class={`relative mb-10 ${index === educationEntries.length - 1 ? "" : ""}`}>
                  <!-- Timeline node -->
                  <div class="absolute -left-10 w-6 h-6 rounded-full bg-[#3be9d1]/20 border-2 border-[#3be9d1] flex items-center justify-center">
                    <div class="w-2 h-2 rounded-full bg-[#3be9d1]"></div>
                  </div>
                  
                  <!-- Content -->
                  <a href={`/education/${entry.slug}`} class="glass-effect rounded-lg p-5 block transition-all duration-300 hover:translate-y-[-5px]">
                    <div class="text-[#3be9d1] text-sm font-medium uppercase tracking-wider mb-2">
                      {entry.dateStart} - Present
                    </div>
                    
                    <h3 class="text-lg font-semibold text-white">{entry.degree}</h3>
                    <p class="text-white/80 mb-4">{entry.name}</p>
                    
                    <p class="text-white/70 text-sm mb-4">{entry.description}</p>
                    
                    <div class="flex items-center text-sm">
                      <span class="text-[#3be9d1] hover:underline">View details â†’</span>
                    </div>
                  </a>
                </div>
              ))}
            </div>
          </section>
          
          <!-- Certifications Section -->
          <section id="certifications" class="mb-12">
            <h2 class="text-2xl font-bold text-white mb-6 flex items-center">
              <span class="w-8 h-8 rounded-full bg-[#3be9d1]/20 flex items-center justify-center text-[#3be9d1] mr-3 text-xs">C</span>
              Certifications
            </h2>
            
            <!-- Timeline -->
            <div class="relative ml-4 pl-8 border-l-2 border-[#3be9d1]/30">
              {certificationEntries.map((entry, index) => (
                <div class={`relative mb-10 ${index === certificationEntries.length - 1 ? "" : ""}`}>
                  <!-- Timeline node -->
                  <div class="absolute -left-10 w-6 h-6 rounded-full bg-[#3be9d1]/20 border-2 border-[#3be9d1] flex items-center justify-center">
                    <div class="w-2 h-2 rounded-full bg-[#3be9d1]"></div>
                  </div>
                  
                  <!-- Content -->
                  <a href={`/education/certifications/${entry.slug}`} class="glass-effect rounded-lg p-5 block transition-all duration-300 hover:translate-y-[-5px]">
                    <div class="text-[#3be9d1] text-sm font-medium uppercase tracking-wider mb-2">
                      {entry.date}
                    </div>
                    
                    <h3 class="text-lg font-semibold text-white">{entry.name}</h3>
                    <p class="text-white/80 mb-4">{entry.institution}</p>
                    
                    <p class="text-white/70 text-sm mb-4">{entry.description}</p>
                    
                    <div class="flex items-center text-sm">
                      <span class="text-[#3be9d1] hover:underline">View certificate â†’</span>
                    </div>
                  </a>
                </div>
              ))}
            </div>
          </section>
          
          <!-- Skills Section -->
          <section id="skills" class="mb-12">
            <h2 class="text-2xl font-bold text-white mb-6 flex items-center">
              <span class="w-8 h-8 rounded-full bg-[#3be9d1]/20 flex items-center justify-center text-[#3be9d1] mr-3 text-xs">S</span>
              Skills & Tools
            </h2>
            
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
              {skillsData.map((skillCategory) => (
                <div class="glass-effect rounded-lg p-5 transition-all duration-300 hover:translate-y-[-5px]">
                  <h3 class="text-lg font-semibold text-white mb-3">{skillCategory.category}</h3>
                  <p class="text-white/70 text-sm mb-4">{skillCategory.description}</p>
                  
                  <div class="flex flex-wrap gap-2">
                    {skillCategory.tools.map((tool) => (
                      <a 
                        href={tool.link} 
                        target="_blank" 
                        rel="noopener noreferrer"
                        class="inline-flex items-center px-3 py-1 bg-[#3be9d1]/10 hover:bg-[#3be9d1]/20 
                              rounded-full text-sm text-[#3be9d1] transition-colors"
                      >
                        {tool.name}
                      </a>
                    ))}
                  </div>
                </div>
              ))}
            </div>
          </section>
        </div>
      </div>
    </div>
  </div>
</PageLayout>

<style>
  /* Updated glass effect for dark background */
  .glass-effect {
    background: rgba(255, 255, 255, 0.05);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.1);
  }
</style>

<script>
// Mobile toggle functionality
document.addEventListener('DOMContentLoaded', () => {
  const toggleButton = document.getElementById('toggle-sidebar');
  const sidebar = document.getElementById('sidebar');
  
  toggleButton?.addEventListener('click', () => {
    sidebar?.classList.toggle('hidden');
  });
});
</script> 