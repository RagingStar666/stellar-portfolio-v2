---
import { getCollection } from "astro:content";
import PageLayout from "@layouts/PageLayout.astro";
import { SITE } from "@consts";

// Define expected types for our content collections based on the schema
type WorkEntry = {
  slug: string;
  data: {
    company: string;
    role: string;
    dateStart: Date;
    dateEnd: string | Date;
    // These properties don't exist in the schema but we're using them
    date?: Date; 
    position?: string;
    description?: string;
    tags?: string[];
    type?: string;
  };
};

type BlogEntry = {
  slug: string;
  data: {
    title: string;
    summary: string;
    date: Date;
    tags: string[];
    draft?: boolean;
  };
};

type ProjectEntry = {
  slug: string;
  data: {
    title: string;
    summary: string;
    date: Date;
    tags: string[];
    draft?: boolean;
    demoUrl?: string;
    repoUrl?: string;
    // These properties don't exist in the schema but we're using them
    client?: string;
    category?: string;
    description?: string;
  };
};

// Since education collection doesn't exist, create mock data
const universityDegree = {
  slug: "university-of-calcutta",
  data: {
    title: "B.A. LL.B. (Hons.)",
    institution: "University of Calcutta",
    date: new Date("2024-06-01"),
    type: "degree",
    description: "Five-year integrated law degree with focus on intellectual property and business law.",
    tags: ["Constitutional Law", "IP Law", "Corporate Law", "Legal Research"]
  }
};

// Get all work entries
const allWork = await getCollection("work") as unknown as WorkEntry[];
const workExperience = allWork
  .filter(work => work.data.type === "experience")
  .sort((a, b) => {
    const dateA = a.data.date instanceof Date ? a.data.date : new Date();
    const dateB = b.data.date instanceof Date ? b.data.date : new Date();
    return dateB.getTime() - dateA.getTime();
  });

// Get latest work experience or use a fallback if no entries exist
const latestWorkExperience = workExperience.length > 0 ? workExperience[0] : {
  slug: "default-experience",
  data: {
    position: "Operations Manager",
    role: "Operations Manager",
    company: "Incenesto Studio",
    date: new Date("2022-01-01"),
    description: "Leading operations, management, and strategic initiatives for the studio.",
    tags: ["Management", "Strategy", "Operations"]
  }
};

// Get all projects
const allProjects = await getCollection("projects") as unknown as ProjectEntry[];
const latestProjects = allProjects
  .sort((a, b) => b.data.date.getTime() - a.data.date.getTime())
  .slice(0, 2);

// Get all blog posts
const allPosts = await getCollection("blog") as unknown as BlogEntry[];
const latestPosts = allPosts
  .filter(post => !post.data.draft)
  .sort((a, b) => b.data.date.getTime() - a.data.date.getTime())
  .slice(0, 2);

// Define a position fallback in case SITE.POSITION doesn't exist
const positionLabel = "Law Student & Operations Professional";

---

<PageLayout title={SITE.TITLE} description={SITE.DESCRIPTION}>
  <div class="container min-h-screen mx-auto px-6 py-12">
    <div class="relative max-w-5xl mx-auto">
      <!-- Crescent moon with teal pulsating cracks -->
      <div class="absolute -top-32 -left-32 -rotate-45 opacity-70 blur-2xl -z-10">
        <div class="relative">
          <div class="absolute w-64 h-64 bg-gradient-to-br from-[#111111] to-[#000000] rounded-full overflow-hidden">
            <!-- Pulsating teal cracks -->
            <div class="absolute top-1/4 left-1/2 w-0.5 h-10 bg-[#3be9d1] rotate-45 opacity-40 animate-pulse"></div>
            <div class="absolute top-1/3 left-1/3 w-0.5 h-8 bg-[#3be9d1] rotate-[30deg] opacity-30 animate-pulse animation-delay-200"></div>
            <div class="absolute top-1/2 left-1/4 w-0.5 h-12 bg-[#3be9d1] rotate-[60deg] opacity-50 animate-pulse animation-delay-400"></div>
            <div class="absolute bottom-1/3 right-1/3 w-0.5 h-6 bg-[#3be9d1] rotate-[120deg] opacity-20 animate-pulse animation-delay-300"></div>
          </div>
          <div class="absolute w-64 h-64 bg-neutral-100 dark:bg-neutral-900 rounded-full -right-8 -top-8"></div>
        </div>
      </div>
      
      <!-- About Me Card (without profile picture) -->
      <div class="glass-effect rounded-lg mb-12 p-10 relative">
        <div class="flex flex-col">
          <h1 class="text-3xl font-bold text-center md:text-left text-white mb-2">
            {SITE.AUTHOR}
          </h1>
          
          <h2 class="text-lg text-center md:text-left text-white/70 mb-4">
            {positionLabel}
          </h2>
          
          <div class="text-white/80 space-y-4">
            <p>
              B.A. LL.B. (Hons.) student at the University of Calcutta, specializing in intellectual property rights, 
              mergers & acquisitions, and finance law. My academic journey focuses on the intersection of law, 
              technology, and business strategy.
            </p>
            
            <p>
              As the founder of Incenesto Studio, I lead operations, management, and strategic initiatives, 
              developing expertise in organizational leadership and project management. My professional 
              interests lie in legal technology, intellectual property protection in digital domains, and 
              alternative dispute resolution mechanisms.
            </p>
            
            <p>
              I'm passionate about bridging traditional legal frameworks with emerging technologies and business models.
              My research interests include comparative IP regimes, constitutional interpretations in digital contexts,
              and the evolving standards of legal practice in a technology-driven world.
            </p>
          </div>
        </div>
      </div>
      
      <!-- Compact Experience Section -->
      <section class="mb-16">
        <div class="flex justify-between items-baseline mb-6">
          <h2 class="text-2xl font-bold text-white">Experience & Education</h2>
          <div class="flex gap-4">
            <a href="/work" class="text-sm text-[#3be9d1] hover:text-[#3be9d1]/80 transition-colors">
              All Experience →
            </a>
            <a href="/education" class="text-sm text-[#3be9d1] hover:text-[#3be9d1]/80 transition-colors">
              All Education →
            </a>
          </div>
        </div>
        
        <!-- Grid for work and education -->
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
          <!-- Latest Work Experience -->
          <div class="glass-effect rounded-xl p-6">
            <span class="text-sm text-[#3be9d1] uppercase tracking-wider mb-3 block">Experience</span>
            <h3 class="text-xl font-semibold text-white mb-2">{latestWorkExperience.data.position || latestWorkExperience.data.role}</h3>
            <p class="text-white/70 mb-4">{latestWorkExperience.data.company}</p>
            <p class="text-white/60 text-sm mb-2">{latestWorkExperience.data.date ? new Date(latestWorkExperience.data.date).getFullYear() : new Date().getFullYear()}-Present</p>
            <p class="text-white/70 text-sm line-clamp-3 mb-4">{latestWorkExperience.data.description || 'No description available'}</p>
            <a href={`/work/${latestWorkExperience.slug}`} class="text-sm text-[#3be9d1] hover:underline">View details →</a>
          </div>
          
          <!-- Latest Education -->
          <div class="glass-effect rounded-xl p-6">
            <span class="text-sm text-[#3be9d1] uppercase tracking-wider mb-3 block">Education</span>
            <h3 class="text-xl font-semibold text-white mb-2">{universityDegree.data.title}</h3>
            <p class="text-white/70 mb-4">{universityDegree.data.institution}</p>
            <p class="text-white/60 text-sm mb-2">{new Date(universityDegree.data.date).getFullYear()}-Present</p>
            <p class="text-white/70 text-sm line-clamp-3 mb-4">{universityDegree.data.description}</p>
            <a href="/education" class="text-sm text-[#3be9d1] hover:underline">View details →</a>
          </div>
        </div>
      </section>
      
      <!-- Projects Section -->
      <section class="mb-16">
        <div class="flex justify-between items-center mb-6">
          <h2 class="text-2xl font-bold text-white">Projects</h2>
          <a href="/projects" class="text-sm text-[#3be9d1] hover:underline">View All →</a>
        </div>
        
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
          {latestProjects.map((project) => (
            <a href={`/projects/${project.slug}`} class="glass-effect rounded-lg p-6 block hover:shadow-md transition-all duration-300 card-hover-effect">
              <div class="flex flex-col h-full">
                <div class="mb-2 flex items-center justify-between">
                  <span class="text-xs text-white/60">{new Date(project.data.date).getFullYear()}</span>
                  <span class="px-2 py-0.5 bg-[#3be9d1]/10 rounded-full text-xs text-[#3be9d1]/90">{project.data.category || project.data.tags[0]}</span>
                </div>
                <h3 class="text-xl font-medium text-white mb-1">{project.data.title}</h3>
                <p class="text-sm text-white/70 mb-1">{project.data.client || ''}</p>
                <p class="text-sm text-white/60 line-clamp-2 mb-4">{project.data.description || project.data.summary}</p>
                <div class="mt-auto">
                  <div class="flex flex-wrap gap-1">
                    {project.data.tags && project.data.tags.slice(0, 3).map((tag: string) => (
                      <span class="px-2 py-0.5 bg-white/5 rounded-full text-xs text-white/70">{tag}</span>
                    ))}
                  </div>
                </div>
              </div>
            </a>
          ))}
        </div>
      </section>
      
      <!-- Blog Posts Section -->
      <section class="mb-16">
        <div class="flex justify-between items-center mb-6">
          <h2 class="text-2xl font-bold text-white">Writing</h2>
          <a href="/blog" class="text-sm text-[#3be9d1] hover:underline">View All →</a>
        </div>
        
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
          {latestPosts.map((post) => (
            <a href={`/blog/${post.slug}`} class="glass-effect rounded-lg p-6 block hover:shadow-md transition-all duration-300 card-hover-effect">
              <div class="flex flex-col h-full">
                <div class="mb-2 flex items-center justify-between">
                  <span class="text-xs text-white/60">{new Date(post.data.date).toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' })}</span>
                  <span class="px-2 py-0.5 bg-[#3be9d1]/10 rounded-full text-xs text-[#3be9d1]/90">{post.data.tags[0]}</span>
                </div>
                <h3 class="text-xl font-medium text-white mb-1">{post.data.title}</h3>
                <p class="text-sm text-white/60 line-clamp-2 mb-4">{post.data.summary}</p>
                <div class="mt-auto">
                  <div class="flex flex-wrap gap-1">
                    {post.data.tags && post.data.tags.slice(0, 3).map((tag: string) => (
                      <span class="px-2 py-0.5 bg-white/5 rounded-full text-xs text-white/70">{tag}</span>
                    ))}
                  </div>
                </div>
              </div>
            </a>
          ))}
        </div>
      </section>
    </div>
  </div>
</PageLayout>

<style>
  .animation-delay-200 {
    animation-delay: 200ms;
  }
  .animation-delay-300 {
    animation-delay: 300ms;
  }
  .animation-delay-400 {
    animation-delay: 400ms;
  }
  .card-hover-effect {
    transition: all 0.3s ease;
  }
  .card-hover-effect:hover {
    transform: translateY(-5px);
  }
  
  /* Updated glass effect for dark background */
  .glass-effect {
    background: rgba(255, 255, 255, 0.05);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.1);
  }
</style>
