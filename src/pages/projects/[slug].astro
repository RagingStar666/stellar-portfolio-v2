---
import PageLayout from "@layouts/PageLayout.astro";

// Define the params type
export function getStaticPaths() {
  // Projects data
  const projectsData = [
    {
      title: "Tower of Babel",
      description: "A web development project focused on creating a multilingual communication platform.",
      image: "/placeholder-image.svg",
      tags: ["React", "NodeJS", "MongoDB", "WebSockets"],
      link: "https://github.com/prodiptaroy/tower-of-babel",
      status: "In Development",
      period: "2024 - Present",
      slug: "tower-of-babel",
      fullDescription: `
        <p>The Tower of Babel is an ambitious web development project aimed at creating a multilingual communication platform that breaks down language barriers in real-time digital conversations.</p>
        
        <h3>Project Overview:</h3>
        <p>In our increasingly connected world, language differences remain a significant obstacle to global communication. The Tower of Babel platform addresses this challenge by providing seamless, real-time translation across multiple languages in a chat environment, allowing users who speak different languages to communicate without barriers.</p>
        
        <h3>Key Features:</h3>
        <ul>
          <li><strong>Real-time Message Translation:</strong> Automatic translation of messages between users speaking different languages</li>
          <li><strong>User Language Profiles:</strong> Customizable language preferences and proficiency settings</li>
          <li><strong>Multi-user Chat Rooms:</strong> Group conversations with participants speaking different languages</li>
          <li><strong>Translation Quality Feedback:</strong> System for users to correct or improve translations</li>
          <li><strong>Language Learning Mode:</strong> Optional display of both original and translated messages for language learning</li>
          <li><strong>API Integration:</strong> Connections to multiple translation services for optimal results</li>
          <li><strong>Progressive Web App:</strong> Mobile-friendly design with offline capabilities</li>
        </ul>
        
        <h3>Technical Stack:</h3>
        <ul>
          <li><strong>Frontend:</strong> React with TypeScript, Tailwind CSS</li>
          <li><strong>Backend:</strong> Node.js with Express</li>
          <li><strong>Database:</strong> MongoDB for user profiles and conversation history</li>
          <li><strong>Real-time Communication:</strong> WebSockets via Socket.io</li>
          <li><strong>Translation Services:</strong> Integration with Google Cloud Translation API and DeepL API</li>
          <li><strong>Authentication:</strong> JWT with OAuth options</li>
          <li><strong>Deployment:</strong> Docker containers on AWS</li>
        </ul>
        
        <h3>Project Status:</h3>
        <p>Tower of Babel is currently in active development. The core translation functionality and basic chat interface have been implemented, with ongoing work on the user experience, additional language support, and performance optimizations.</p>
        
        <h3>Future Directions:</h3>
        <p>Planned enhancements include voice message translation, AI-powered conversation suggestions, additional language support focusing on under-represented languages, and a public API for third-party integrations.</p>
      `
    },
    {
      title: "Legal Document Analyzer",
      description: "An application for parsing and analyzing legal documents using natural language processing.",
      image: "/placeholder-image.svg",
      tags: ["Python", "NLP", "Legal Tech"],
      link: "#",
      status: "Concept Stage",
      period: "2025 (Planned)",
      slug: "legal-document-analyzer",
      fullDescription: `
        <p>The Legal Document Analyzer is a concept-stage project aimed at developing a specialized tool for parsing, analyzing, and extracting insights from legal documents using natural language processing techniques.</p>
        
        <h3>Project Vision:</h3>
        <p>Legal professionals often need to process large volumes of documents for research, case preparation, contract analysis, and compliance reviews. This tool aims to streamline this process by automatically identifying key components, extracting relevant information, and providing analytical insights about legal documents.</p>
        
        <h3>Planned Features:</h3>
        <ul>
          <li><strong>Document Structure Analysis:</strong> Automatic identification of document sections, clauses, and legal elements</li>
          <li><strong>Key Information Extraction:</strong> Identification of parties, dates, obligations, conditions, and legal references</li>
          <li><strong>Legal Citation Recognition:</strong> Automatic detection and validation of case citations and statutory references</li>
          <li><strong>Contract Comparison:</strong> Tools for comparing multiple versions of contracts or similar documents</li>
          <li><strong>Risk Identification:</strong> Highlighting potential issues or ambiguities in legal language</li>
          <li><strong>Document Summarization:</strong> Generation of concise summaries of complex legal documents</li>
          <li><strong>Search and Analytics:</strong> Advanced search capabilities across document collections</li>
        </ul>
        
        <h3>Technical Approach:</h3>
        <ul>
          <li><strong>Core Technology:</strong> Python-based NLP pipeline using spaCy and Hugging Face Transformers</li>
          <li><strong>Machine Learning:</strong> Fine-tuned language models specialized for legal text</li>
          <li><strong>Legal Knowledge Base:</strong> Integration with legal databases and reference materials</li>
          <li><strong>User Interface:</strong> Web-based dashboard for document upload, analysis, and results visualization</li>
          <li><strong>API Services:</strong> RESTful API for integration with existing legal software</li>
        </ul>
        
        <h3>Project Status:</h3>
        <p>This project is currently in the conceptual and planning stage. I am researching existing approaches to legal document analysis, exploring appropriate NLP techniques, and defining the initial scope and requirements. Development is planned to begin in 2025.</p>
        
        <h3>Motivation:</h3>
        <p>This project represents the intersection of my interests in legal studies and technology. By applying natural language processing to legal documents, I aim to explore how technology can assist legal professionals in working more efficiently and effectively with complex legal texts.</p>
      `
    }
  ];
  
  return projectsData.map(entry => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
---

<PageLayout title={entry.title} description={entry.description}>
  <div class="container mx-auto p-6">
    <div class="max-w-4xl mx-auto">
      <!-- Breadcrumb Navigation -->
      <nav class="flex mb-8 text-sm text-black/60 dark:text-white/60">
        <a href="/" class="hover:text-black hover:dark:text-white transition-colors">Home</a>
        <span class="mx-2">/</span>
        <a href="/projects" class="hover:text-black hover:dark:text-white transition-colors">Projects</a>
        <span class="mx-2">/</span>
        <span class="text-black dark:text-white">{entry.title}</span>
      </nav>
      
      <!-- Header -->
      <div class="mb-10">
        <div class="bg-white dark:bg-black/20 rounded-lg shadow-sm border border-black/10 dark:border-white/10 overflow-hidden">
          <div class="aspect-video w-full relative">
            <img src={entry.image} alt={entry.title} class="w-full h-full object-cover" />
            <div class="absolute inset-0 bg-gradient-to-t from-black/70 to-transparent"></div>
            <div class="absolute bottom-0 left-0 p-6">
              <div class="flex flex-wrap gap-2 mb-3">
                <span class="inline-block px-3 py-1 bg-black/60 text-white rounded-full text-sm">
                  {entry.status}
                </span>
                <span class="inline-block px-3 py-1 bg-black/60 text-white rounded-full text-sm">
                  {entry.period}
                </span>
              </div>
              <h1 class="text-3xl md:text-4xl font-bold text-white mb-2">{entry.title}</h1>
              <p class="text-xl text-white/90">{entry.description}</p>
            </div>
          </div>
          
          <!-- Content -->
          <div class="p-8">
            <!-- Tags -->
            <div class="mb-6">
              <h2 class="text-lg font-semibold mb-3 text-black dark:text-white">Technologies & Skills</h2>
              <div class="flex flex-wrap gap-2">
                {entry.tags.map((tag: string) => (
                  <span class="px-3 py-1 bg-black/5 dark:bg-white/10 rounded-full text-sm text-black/70 dark:text-white/70">
                    {tag}
                  </span>
                ))}
              </div>
            </div>
            
            <div class="prose dark:prose-invert max-w-none" set:html={entry.fullDescription} />
            
            {entry.link !== "#" && (
              <div class="mt-8 pt-6 border-t border-black/10 dark:border-white/10">
                <a href={entry.link} target="_blank" rel="noopener noreferrer" class="inline-flex items-center px-4 py-2 bg-black text-white dark:bg-white dark:text-black rounded-lg hover:opacity-90 transition-opacity">
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
                  </svg>
                  View Project on GitHub
                </a>
              </div>
            )}
          </div>
        </div>
      </div>
      
      <!-- Navigation -->
      <div class="flex justify-between mt-12">
        <a href="/projects" class="inline-flex items-center px-4 py-2 bg-black/5 dark:bg-white/10 rounded-lg hover:bg-black/10 hover:dark:bg-white/20 transition-colors">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd" d="M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z" clip-rule="evenodd" />
          </svg>
          Back to Projects
        </a>
      </div>
    </div>
  </div>
</PageLayout> 